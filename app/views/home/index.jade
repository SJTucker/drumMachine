extends ../shared/template

block content
  nav.top-bar

    section.top-bar-section
      ul.left
        if user
          li.email= user.slicedEmail
      ul.navButton.right
        li: a.nav(href="/register") Register
        li.divider
        li: a.nav(href="/login") Login
 
  .panel.text-center
    h1 seQuenZisTenZ

  if user
    .row
      .small-3.columns
        form(method='post', action='/')
          label: h3 Name:
          input#name(type="text")
          button#save Save Beat
  
  if user
    .row
      .small-4.columns
        select#beats
          each beat in user.beats
            option(value= beat.name)= beat.name
   
    
        button#load Load
    

  .row#space
    .small-12.columns
      &nbsp


  .row#controls
    .small-12.columns
      .row
        .small-2.columns
          div 
            h3 Kits:
            select#kit
              option(value='Plasticid-MkII') Plasticid MkII
              option(value='T09') TR09
              option(value='TR606') TR606

          button.tiny.radius#play Play

        .small-2.columns
          label
            h3 Tempo:
          input.tempoText(id="tempo", type="text")
          button.tiny.radius#setTempo Set Tempo
        .small-2.columns.
          <h3>Volume:</h3>
            <div id="volume" class="range-slider radius" data-slider>
              <span class="range-slider-handle"></span>
              <span class="range-slider-active-segment"></span>
              <input type="hidden">
            </div>

        .small-4.columns

  .row#sequenceWrapper
    .small-12.columns
      ul.inline-list.kickUL
        li.drum#kick Kick
        -for(var i = 0; i < 4; i++)
          li.seqStep.kick(kick-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.kick(kick-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.kick(kick-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.kick(kick-sequence-position = i)

      ul.inline-list.snareUL
        li.drum#snare Snare
        -for(var i = 0; i < 4; i++)
          li.seqStep.snare(snare-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.snare(snare-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.snare(snare-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.snare(snare-sequence-position = i)
        
      ul.inline-list.hatUL
        li.drum#hat Hat
        -for(var i = 0; i < 4; i++)
          li.seqStep.hat(hat-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.hat(hat-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.hat(hat-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.hat(hat-sequence-position = i)

      ul.inline-list.tom1UL
        li.drum#tom1 Tom1
        -for(var i = 0; i < 4; i++)
          li.seqStep.tom1(tom1-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.tom1(tom1-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.tom1(tom1-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.tom1(tom1-sequence-position = i)
