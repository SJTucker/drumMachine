extends ../shared/template

block content
  nav.top-bar

    section.top-bar-section
      ul.left
        if user
          li.email= user.slicedEmail
      ul.navButton.right
        li: a.nav(href="/register") Register
        li.divider
        li: a.nav(href="/login") Login
 
  .panel.text-center
    h1 seQuenZisTenZ

  if user
    .row
      .small-3.columns
        form(method='post', action='/')
          label: h3 Name:
          input#name(type="text")
          button#save Save Beat
  
  if user
    .row
      .small-4.columns
        select#beats
          each beat in user.beats
            option(value= beat.name)= beat.name
   
    
        button#load Load
    

  .row#space
    .small-12.columns
      &nbsp


  .row#controls
    .small-12.columns
      .row
        .small-4.columns.text-center
          div 
            h3 Kits:
            select#kit
              option(value='Plasticid-MkII') Roland 808 MkII
              option(value='T09') Roland TR909
              option(value='TR606') Roland TR606
              option(value='hiphop') HipHop
              option(value='dr.groove') Boss Dr.Groove
              option(value='ace') Ace Tone Rhythm
              option(value='akai-xe-8') Akai XE-8
              option(value='nord-rack-2') Nord Rack 2
              option(value='groovebox') Roland GrooveBox


            button.control.left.tiny.radius#play

        .small-4.columns.
          <div class='row'>
            <h3>Volume:</h3>
              <div id="kitVolume" class="range-slider radius" data-slider>
                <span class="range-slider-handle"></span>
                <span class="range-slider-active-segment"></span>
                <input type="hidden">
              </div>
          </div>
          <div class='row text-center'>
            <button id='clear' class='control tiny radius'>Clear</button>
          </div>

        .small-4.columns.text-center
          label
            h3 Tempo:
          input.tempoText(id="tempo", type="text")
          button.control.right.tiny.radius#setTempo SET TEMPO

  .row#sequenceWrapper(style='width: 100%')
    .small-12.columns
      canvas(id='animation', class='container')
      ul.inline-list.kickUL(style='width: 105%')
        li.drum#kick Kick
        -for(var i = 0; i < 4; i++)
          li.seqStep.kick(kick-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.kick(kick-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.kick(kick-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.kick(kick-sequence-position = i)

      ul.inline-list.snareUL(style='width: 105%')
        li.drum#snare Snare
        -for(var i = 0; i < 4; i++)
          li.seqStep.snare(snare-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.snare(snare-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.snare(snare-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.snare(snare-sequence-position = i)
        
      ul.inline-list.hatUL(style='width: 105%')
        li.drum#hat Hat
        -for(var i = 0; i < 4; i++)
          li.seqStep.hat(hat-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.hat(hat-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.hat(hat-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.hat(hat-sequence-position = i)

      ul.inline-list.tomUL(style='width: 105%')
        li.drum#tom Tom
        -for(var i = 0; i < 4; i++)
          li.seqStep.tom(tom-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.tom(tom-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.tom(tom-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.tom(tom-sequence-position = i)
            
      ul.inline-list.ohatUL(style='width:105%')
        li.drum#ohat OHat
        -for(var i = 0; i < 4; i++)
          li.seqStep.ohat(ohat-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.ohat(ohat-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.ohat(ohat-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.ohat(ohat-sequence-position = i)
            
  .row#synthControls
    .small-12.columns
      .row
        .small-4.columns
          div
            h3 Synths:
            select#synth
              option(value='MiniSquare') MiniSquare
              option(value='FattyWave') FattyWave
              option(value='TriWave') TriWave
              option(value='SweetChords') SweetChords
        .small-4.columns.
          <h3>Volume:</h3>
            <div id="synthVolume" class="range-slider radius" data-slider>
              <span class="range-slider-handle"></span>
              <span class="range-slider-active-segment"></span>
              <input type="hidden">
            </div>

        .small-4-columns

  .row(id='synthWrapper', style='width: 100%;')
    .small-12.columns
      canvas(class='container', id='animation2')
      ul(class='inline-list aUL', style='width: 105%;')
        li.drum#a A
        -for(var i = 0; i < 4; i++)
          li.seqStep.a(a-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.a(a-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.a(a-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.a(a-sequence-position = i)

      ul(class='inline-list bUL', style='width: 105%;')
        li.drum#b B
        -for(var i = 0; i < 4; i++)
          li.seqStep.b(b-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.b(b-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.b(b-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.b(b-sequence-position = i)

      ul(class='inline-list cUL', style='width: 105%;')
        li.drum#c C
        -for(var i = 0; i < 4; i++)
          li.seqStep.c(c-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.c(c-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.c(c-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.c(c-sequence-position = i)

      ul(class='inline-list dUL', style='width: 105%;')
        li.drum#d D
        -for(var i = 0; i < 4; i++)
          li.seqStep.d(d-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.d(d-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.d(d-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.d(d-sequence-position = i)

      ul(class='inline-list eUL', style='width: 105%;')
        li.drum#e E
        -for(var i = 0; i < 4; i++)
          li.seqStep.e(e-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.e(e-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.e(e-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.e(e-sequence-position = i)

      ul(class='inline-list', id='fUL', style='width: 105%;')
        li.drum#f F
        -for(var i = 0; i < 4; i++)
          li.seqStep.f(f-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.f(f-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.f(f-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.f(f-sequence-position = i)
            
      ul(class='inline-list gUL', style='width: 105%;')
        li.drum#g G
        -for(var i = 0; i < 4; i++)
          li.seqStep.g(g-sequence-position = i)
        li.divider
        -for(var i = 4; i < 8; i++)
          li.seqStep.g(g-sequence-position = i)
        li.divider
        -for(var i = 8; i < 12; i++)
          li.seqStep.g(g-sequence-position = i)
        li.divider
        -for(var i = 12; i < 16; i++)
          li.seqStep.g(g-sequence-position = i)
